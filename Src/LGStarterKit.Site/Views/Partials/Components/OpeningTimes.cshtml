@inherits Umbraco.Web.Mvc.UmbracoTemplatePage

@{
    var openingTimes = Model.Content.Children()
        .Where(x => x.DocumentTypeAlias == "OpeningTimes" && x.IsVisible());

    var isSingle = true;
}

@if (openingTimes.Any())
{
    <h2 class="page-header">Opening Times</h2>
    
    if (openingTimes.Count() > 1 )
    {
        isSingle = false; 
        
        <ul class="nav nav-tabs" id="openTimes" role="tablist">
            @foreach(var item in openingTimes)
            {
                <li @Umbraco.If(item.IsFirst(), "class=\"active\"")>
                    <a href="#opening-@item.Id" data-toggle="tab" role="tab">
                        @item.GetPropertyValue("title", item.Name)
                    </a>
                </li>
            }
        </ul>
    }

    var today = DateTime.Now.DayOfWeek;
    <div class="tab-content">
        @foreach (var item in openingTimes)
        {
            <div class="tab-pane @Umbraco.If(item.IsFirst(), "active")"
                 id="opening-@item.Id" itemprop="openingHoursSpecification"
                 role="tabpanel"
                 itemscope itemtype="http://schema.org/OpeningHoursSpecification">

                @if (!isSingle)
                {
                    <h4 itemprop="name">@item.GetPropertyValue("title", item.Name)</h4>
                }

                @if (item.HasProperty("openingTimes"))
                {
                    var openingInfo = item.GetPropertyValue<Jumoo.OpeningSoon.OpeningSoonModel>("openingTimes");
                    <table class="table">
                        @foreach (var time in openingInfo)
                        {
                            <tr @Umbraco.If(today.ToString() == time.Weekday, "class=\"success\"")>
                                <td itemprop="dayOfWeek" datetime="@time.Weekday">@time.Weekday</td>
                                @if (time.IsScheduled)
                                {
                                    if (time.IsFirstSet)
                                    {
                                        <td itemprop="opens">@time.Open</td>
                                        <td>-</td>
                                        <td itemprop="closes">@time.Close</td>
                                    }
                                    else
                                    {
                                        <td colspan="3"></td>
                                    }
                                    if (time.IsSecondSet)
                                    {
                                        <td itemprop="opens">@time.Open2</td>
                                        <td>-</td>
                                        <td itemprop="closes">@time.Close2</td>
                                    }
                                    else
                                    {
                                        <td colspan="3"></td>
                                    }

                                }
                                else
                                {
                                    <td colspan="6">Closed</td>
                                }
                            </tr>
                        }
                    </table>
                }
            </div>
        }
    </div>
    }